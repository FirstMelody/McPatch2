name: Release Manager

on:
  push:
    tags:
      - "v*"
      # 允许手动触发 workflow
  workflow_dispatch:
# on:
#   - push

permissions:
  contents: write
  pages: read

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            rustc-target: x86_64-pc-windows-msvc
          # - os: ubuntu-latest
          #   rustc-target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            rustc-target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            rustc-target: aarch64-unknown-linux-musl

    runs-on: ${{ matrix.os }}
    env:
      rust-version: '1.83'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools musl-dev
          if [[ "${{ matrix.rustc-target }}" == "aarch64-unknown-linux-musl" ]]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi

      - name: Configure Cargo for aarch64-musl
        if: matrix.rustc-target == 'aarch64-unknown-linux-musl'
        run: |
          mkdir -p .cargo
          echo '[target.aarch64-unknown-linux-musl]' > .cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config.toml

      - name: Setup Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Build web pages
        working-directory: web
        run: |-
          npm ci
          npm run build

      - name: Cargo build
        env:
          MP_RUSTC_TARGET: ${{ matrix.rustc-target }}
        run: |-
          rustup update ${{ env.rust-version }} && rustup default ${{ env.rust-version }}
          rustup target add ${{ matrix.rustc-target }}
          cargo run --package xtask -- manager
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: manager-binaries-${{ matrix.rustc-target }}
          path: target/dist/*

      # - name: Distribute
      #   uses: bxb100/action-upload@main
      #   with:
      #     provider: webdav
      #     provider_options: |
      #       endpoint=${{ secrets.webdav_endpoint }}
      #       username=${{ secrets.webdav_username }}
      #       password=${{ secrets.webdav_password }}
      #       root=${{ secrets.webdav_root_manager }}
      #     include: 'target/dist/**'